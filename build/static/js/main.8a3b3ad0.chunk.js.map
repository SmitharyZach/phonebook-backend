{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","person","post","id","delete","put","Notification","notification","message","style","color","type","fontSize","borderStyle","borderRadius","padding","marginBottom","Filter","props","onChange","handleChange","value","Persons","persons","map","p","key","name","number","onClick","deletePerson","PersonForm","onSubmit","handleSubmit","handleNameChange","newName","handleNumberChange","newNumber","App","useState","setPersons","setNewName","setNewNumber","filter","setFilter","setNotification","useEffect","personService","notify","setTimeout","personsToShow","length","toLowerCase","includes","event","target","preventDefault","existingPerson","find","window","confirm","replacedPerson","catch","createdPerson","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8a3b3ad0.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst baseUrl = 'http://localhost:3001/api/persons'\n\nconst getAll = () => {\n  const promise = axios.get(baseUrl)\n\n  return promise.then(response => response.data)\n}\n\nconst create = (person) => {\n  const promise = axios.post(baseUrl, person)\n\n  return promise.then(response => response.data)\n}\n\nconst remove = (id) => {\n  const promise = axios.delete(`${baseUrl}/${id}`)\n\n  return promise.then(response => response.data)\n}\n\nconst replace = (person) => {\n  const promise = axios.put(`${baseUrl}/${person.id}`)\n\n  return promise.then(response => response.data)\n}\n\nexport default {\n  getAll, create, remove, replace\n}\n","import React, { useState, useEffect } from 'react'\nimport personService from './services/persons'\n\nconst Notification = ({ notification }) => {\n  if (notification.message === null) {\n    return null\n  }\n\n  const style = {\n    color: notification.type === 'error' ? 'red' : 'green',\n    fontSize: 20,\n    borderStyle: 'solid',\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10,\n  }\n\n  return (\n    <div style={style}>\n      {notification.message}\n    </div>\n  )\n}\n\nconst Filter = (props) => {\n  return (\n    <div>\n      Filter\n      <input onChange={props.handleChange} value={props.value} />\n    </div>\n  )\n}\n\nconst Persons = (props) => {\n  return (\n    props.persons.map(p =>\n      <div key={p.name}>\n        {p.name} {p.number} <button onClick={()=>props.deletePerson(p.id)}>Delete</button>\n      </div>\n    )\n  )\n}\n\nconst PersonForm = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div>\n        Name: <input onChange={props.handleNameChange} value={props.newName} />\n      </div>\n      <div>\n        Number: <input onChange={props.handleNumberChange} value={props.newNumber} />\n      </div>\n      <div>\n        <button type=\"submit\">Add</button>\n      </div>\n    </form>\n  )\n}\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [filter, setFilter] = useState('')\n  const [notification, setNotification] = useState({\n    message: null\n  })\n\n  useEffect(() => {\n    personService.getAll()\n      .then(data => {\n        setPersons(data)\n      })\n  }, [])\n\n  const handleNameChange = (event) => setNewName(event.target.value)\n  const handleNumberChange = (event) => setNewNumber(event.target.value)\n  const handleFilterChange = (event) => setFilter(event.target.value)\n\n  const notify = (message, type='success') => {\n    setNotification({ message, type})\n    setTimeout(() => setNotification({ message:null }), 1000)\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n\n    const existingPerson = persons.find(p => p.name === newName)\n\n    if (existingPerson) {\n      const ok = window.confirm(`${newName} has already been added, update number?`)\n\n      if (ok) {\n        personService\n          .replace({\n            ...existingPerson,\n            number: newNumber\n          })\n          .then(replacedPerson => {\n            setPersons(persons.map(p => p.name === newName ? replacedPerson : p))\n          })\n          .catch(() => {\n            setPersons(persons.filter(p => p.name !== newName))\n            notify(`${newName} has already been deleted`, 'error')\n          })\n      }\n\n      return\n    }\n\n    personService\n      .create({\n        name: newName,\n        number: newNumber\n      })\n      .then(createdPerson => {\n        setPersons(persons.concat(createdPerson))\n        setNewName('')\n        setNewNumber('')\n        notify(`Added ${createdPerson.name}`)\n      })\n  }\n\n  const deletePerson = (id) => {\n    const person = persons.find(p => p.id === id)\n    const ok = window.confirm(`Delete ${person.name}`)\n    if (ok) {\n      personService\n        .remove(id)\n        .then(() => {\n          setPersons(persons.filter(p => p.id !== id))\n        })\n      notify(`Deleted ${person.name}`)\n    }\n  }\n\n  const personsToShow = filter.length === 0\n    ? persons\n    : persons.filter(p => p.name.toLowerCase().includes(filter.toLowerCase()) )\n\n    return (\n      <div>\n        <h2>Phonebook</h2>\n\n        <Notification notification={notification} />\n\n        <Filter handleChange={handleFilterChange} value={filter} />\n\n        <h3>And number</h3>\n\n        <PersonForm\n          handleNameChange={handleNameChange}\n          handleNumberChange={handleNumberChange}\n          handleSubmit={handleSubmit}\n          newName={newName}\n          newNumber={newNumber}\n        />\n\n        <h3>Numbers</h3>\n\n        <Persons persons={personsToShow} deletePerson={deletePerson} />\n      </div>\n    )\n\n  }\n\n  export default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}